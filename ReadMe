# BASIC
1. to view all facial components, including the image and description --> done
2. to select face/mouth/eyes/hairdo & preview the emojitar image --> done
3. to save a newly created emojitar to the server (must: unique id, descrip, creator, created-date/time) --> done 
4. to view all existing emojitars (must: image, creator, description) --> done
5. to view a sepcific emojitar (must: image, creator, description, input:commenter's name/rate/comments)--> done
6. to comment & rate a specific emojitar (must: commenter, commented-date/time) --> done

# INTERMEDIATE
1. function for all users
    1.1 to view all emojitars with specific criteria (e.g. creator or create-on/after date) --> done
    1.2 to view existing emojitars / associated comments / build / preview new emojitars --> done
    1.3 to register --> done (some bugs in backend and should be discussed later)
    1.4 to login    --> done
2. function only for logged users
    2.1 to save emojitars --> done
    2.2 to comment/rate emojitars other user created  --> done
    2.3 to delete their own emijotars (must: relevent files and comments...) --> backend(endpoint needed), front: set criteria to ban not creator to do specific function.
# ADVANCE
1. function for all users
    1.1 to customise a facial component(e.g. tint the colour of face/eye/hair) --> frontend
2. function for logged users
    2.1 to upload a new facial component
         @ must: type, image, id, description, creator, save-date/time
         @ preview before upload
         @ verify: file type, maximum file size, image dimensions(240x240 pixel, PNG, transparency)

# API
Node.js Tutorial: https://www.youtube.com/watch?v=TcvOgwQPsSo

The API should provide services including, but not limited to:
• Getting all facial components. -> done
• Creating a new emojitar. -> done 
• Getting all existing emojitars. -> done
• Getting a specific emojitar along with its comments & ratrings. ->
• Commenting on & rating an existing emojitar. -> done 